ahoyapi: v2
commands:
  ps:
    cmd: docker-compose ps "$@"
    usage: List the running docker-compose containers.

  stop:
    cmd: docker-compose stop "$@"
    usage: Stop the docker-compose containers.

  down:
    cmd: docker-compose down "$@"
    usage: Stop and remove the docker-compose containers.

  restart:
    cmd: docker-compose restart "$@"
    usage: Restart the docker-compose containers.

  composer:
    cmd: docker-compose run cli composer "$@"
    usage: Run composer commands in the cli service container.

  drush:
    cmd: docker-compose run cli drush --root=/var/www/html/web "$@"
    usage: Run drush commands in the cli service container.

  bash:
    cmd: docker-compose run cli bash
    usage: Start a shell in the container (like ssh without actual ssh).

  sqlc:
    cmd: "docker-compose run cli drush --root=/var/www/html/web sqlc"
    usage: Connect to the default mysql database. Supports piping of data into the command.

  up:
    cmd: |
      docker network create humpback_proxy &> /dev/null
      ahoy docker proxy-up
      docker-compose up -d
      ahoy docker hostfile
      URL=`ahoy docker url`
      if [ ! -z "${CI}" ] ; then
        echo "Started. You can access your site at $URL"
        exit 0
      fi
      if type "xdg-open" &> /dev/null; then
        xdg-open $URL
      elif type "open" &> /dev/null; then
        open $URL
      else
        echo "Started. You can access your site at $URL"
      fi
    usage: Start the docker-compose containers.

  reset:
    cmd: |
      docker-compose down
      docker-compose up -d
    usage: Destroy and recreate the containers

  docker:
    usage: A series of docker commands for development
    imports:
      - .ahoy/docker.ahoy.yml
    hide: true

  site:
    usage: A series of docker commands for this site
    imports:
      - .ahoy/site.ahoy.yml
    hide: true

  help:
    usage: Print this help
    cmd: ahoy --help

  init:
    cmd: echo "ahoy.yml file already exists."
    hide: true
